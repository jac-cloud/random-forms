/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as FormsIndexImport } from './routes/forms/index'

// Create Virtual Routes

const IndexLazyImport = createFileRoute('/')()
const AuthIndexLazyImport = createFileRoute('/auth/')()
const FormsQuizIdLazyImport = createFileRoute('/forms/$quizId')()
const AuthLogoutLazyImport = createFileRoute('/auth/logout')()

// Create/Update Routes

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AuthIndexLazyRoute = AuthIndexLazyImport.update({
  path: '/auth/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/index.lazy').then((d) => d.Route))

const FormsIndexRoute = FormsIndexImport.update({
  path: '/forms/',
  getParentRoute: () => rootRoute,
} as any)

const FormsQuizIdLazyRoute = FormsQuizIdLazyImport.update({
  path: '/forms/$quizId',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/forms/$quizId.lazy').then((d) => d.Route))

const AuthLogoutLazyRoute = AuthLogoutLazyImport.update({
  path: '/auth/logout',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/auth/logout.lazy').then((d) => d.Route))

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/auth/logout': {
      id: '/auth/logout'
      path: '/auth/logout'
      fullPath: '/auth/logout'
      preLoaderRoute: typeof AuthLogoutLazyImport
      parentRoute: typeof rootRoute
    }
    '/forms/$quizId': {
      id: '/forms/$quizId'
      path: '/forms/$quizId'
      fullPath: '/forms/$quizId'
      preLoaderRoute: typeof FormsQuizIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/forms/': {
      id: '/forms/'
      path: '/forms'
      fullPath: '/forms'
      preLoaderRoute: typeof FormsIndexImport
      parentRoute: typeof rootRoute
    }
    '/auth/': {
      id: '/auth/'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/auth/logout': typeof AuthLogoutLazyRoute
  '/forms/$quizId': typeof FormsQuizIdLazyRoute
  '/forms': typeof FormsIndexRoute
  '/auth': typeof AuthIndexLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/auth/logout': typeof AuthLogoutLazyRoute
  '/forms/$quizId': typeof FormsQuizIdLazyRoute
  '/forms': typeof FormsIndexRoute
  '/auth': typeof AuthIndexLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/auth/logout': typeof AuthLogoutLazyRoute
  '/forms/$quizId': typeof FormsQuizIdLazyRoute
  '/forms/': typeof FormsIndexRoute
  '/auth/': typeof AuthIndexLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/auth/logout' | '/forms/$quizId' | '/forms' | '/auth'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/auth/logout' | '/forms/$quizId' | '/forms' | '/auth'
  id:
    | '__root__'
    | '/'
    | '/auth/logout'
    | '/forms/$quizId'
    | '/forms/'
    | '/auth/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AuthLogoutLazyRoute: typeof AuthLogoutLazyRoute
  FormsQuizIdLazyRoute: typeof FormsQuizIdLazyRoute
  FormsIndexRoute: typeof FormsIndexRoute
  AuthIndexLazyRoute: typeof AuthIndexLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AuthLogoutLazyRoute: AuthLogoutLazyRoute,
  FormsQuizIdLazyRoute: FormsQuizIdLazyRoute,
  FormsIndexRoute: FormsIndexRoute,
  AuthIndexLazyRoute: AuthIndexLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/auth/logout",
        "/forms/$quizId",
        "/forms/",
        "/auth/"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/auth/logout": {
      "filePath": "auth/logout.lazy.tsx"
    },
    "/forms/$quizId": {
      "filePath": "forms/$quizId.lazy.tsx"
    },
    "/forms/": {
      "filePath": "forms/index.tsx"
    },
    "/auth/": {
      "filePath": "auth/index.lazy.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
